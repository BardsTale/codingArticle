gulp 러프하게 정리.


gulp? front-end Task Runner. "꿀꺽 삼키다"라는 뜻. 
주로 반복적인 작업들이나 빌드에 필요한 간단한 작업들을 처리함.

coding -> js test -> js minify -> js merge -> css minify -> css merge. -> result output

node.js 스트림 기반의 build system. 
: 싱글 스레드의 non-blocking I/O를 기반으로 한 병렬 처리를 제공, 즉 요청 후 한 번에 결과를 받는 것이 아닌 중간 중간 전달 받음.
gulp의 task는 pipe로 연결되며 병렬로 동시에 여러 task를 수행함.


gulp.task()
: 병렬로 수행될 새로운 gulp task 등록. 
첫 번째 파라미터는 task의 이름, 두 번째 파라미터는 실제 작업할 함수.
첫 번째 파라미터를 'default', 두 번째를 ['task명']으로 설정할 경우 default task로 등록하여 편하게 쓸 수 있음.


Tasks in Series
: 특정 task에 먼저 수행되어야 할 task의 이름을 배열 형태로 두 번째 인자로 넣어줄 경우 선행 task들이 실행 된 후 
자신의 task가 실행되며 이를 활용하여 task의 실행 순서를 지정할 수 있다. 
ex: gulp.task('world',['hello','new'],()=>console.log(' world!')); //hello, new 2개의 task를 순차적으로 실행 후 world task가 실행.


gulp.src
: 해당 task의 대상이 되는 엔트리 파일을 지정함.

gulp.desk
: 해당 task의 결과물이 저장될 경로를 지정함. => 번들링을 해주진 않음.


watch
: 변경이 있을 때마다 감지해서 task를 실행해주는 기능. gulp.watch 메서드를 통해 제공.
파일을 선택하는 방식은 node-glob 문법을 따름
watch('경로와 파일 명',{와치 옵션},['task 명'])



// 사용 플러그인
- gulp-imagemin : 이미지 압축
- gulp-header : 걸프 사용 시 헤더를 추가해주는 플러그인.
- gulp-sass : scss 파일 컴파일
- gulp-watch : watch 플러그인
- gulp-autoprefixer : css 크로스 브라우징, js는 웹팩의 babel 사용.
- gulp-sourcemaps : sass 소스맵.
- webpack-stream : stream으로 webpack을 연동하여 사용하는 플러그인.
- gulp-zip : 스트리밍 모드를 지원하는 리소스 zip 압축 플러그인.
